@page "/login"
@using BookingHotel.Models
@inject IAuthService AuthService
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager Navigation

<PageTitle>Вхід</PageTitle>

<div class="login-form">
    <h3 class="text-center mb-4">Вхід до системи</h3>
    
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }

    <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
        <DataAnnotationsValidator />
        
        <div class="form-group mb-3">
            <label for="email" class="form-label">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
            <ValidationMessage For="@(() => loginModel.Email)" class="text-danger" />
        </div>

        <div class="form-group mb-3">
            <label for="password" class="form-label">Пароль:</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
            <ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
        </div>

        <button type="submit" class="btn btn-primary w-100 mb-3" disabled="@isLoading">
            @if (isLoading)
            {
                <span class="spinner-border spinner-border-sm me-2"></span>
            }
            Увійти
        </button>
    </EditForm>

    <div class="text-center">
        <p>Немає акаунту? <a href="/register">Зареєструватися</a></p>
    </div>
</div>

@code {
    private UserLoginModel loginModel = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var success = await AuthService.Login(loginModel);
            if (success)
            {
                AuthStateProvider.MarkUserAsAuthenticated();
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Невірний email або пароль.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Помилка під час входу. Спробуйте ще раз.";
        }
        finally
        {
            isLoading = false;
        }
    }
}

<style>
    .login-form {
        max-width: 400px;
        margin: 0 auto;
    }

    .form-label {
        font-weight: 500;
        color: #333;
    }

    .form-control {
        border-radius: 6px;
        border: 1px solid #ddd;
        padding: 0.75rem;
    }

    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        border-radius: 6px;
        padding: 0.75rem;
        font-weight: 500;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
    }
</style>